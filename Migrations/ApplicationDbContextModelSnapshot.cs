// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuCrudAPI.Infrastructure;

#nullable disable

namespace c.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottuCrudAPI.Domain.Entities.Motocicleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("PatioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.ToTable("MOTO", (string)null);
                });

            modelBuilder.Entity("MottuCrudAPI.Domain.Entities.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("MotocicletaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("PatioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("MotocicletaId");

                    b.HasIndex("PatioId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("MottuCrudAPI.Domain.Entities.Patio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OcupacaoAtual")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Patios");
                });

            modelBuilder.Entity("MottuCrudAPI.Persistense.Patio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OcupacaoAtual")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PATIO", (string)null);
                });

            modelBuilder.Entity("MottuCrudAPI.Domain.Entities.Motocicleta", b =>
                {
                    b.HasOne("MottuCrudAPI.Domain.Entities.Patio", "Patio")
                        .WithMany("Motocicletas")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuCrudAPI.Domain.Entities.Movimentacao", b =>
                {
                    b.HasOne("MottuCrudAPI.Domain.Entities.Motocicleta", "Motocicleta")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("MotocicletaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MottuCrudAPI.Domain.Entities.Patio", "Patio")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Motocicleta");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuCrudAPI.Domain.Entities.Motocicleta", b =>
                {
                    b.Navigation("Movimentacoes");
                });

            modelBuilder.Entity("MottuCrudAPI.Domain.Entities.Patio", b =>
                {
                    b.Navigation("Motocicletas");

                    b.Navigation("Movimentacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
